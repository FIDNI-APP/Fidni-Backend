# Generated by Django 5.0.1 on 2025-06-07 17:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('caracteristics', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('estimated_hours', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to='caracteristics.classlevel')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_paths', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to='caracteristics.subject')),
            ],
            options={
                'ordering': ['subject__name', 'class_level__order'],
                'unique_together': {('subject', 'class_level')},
            },
        ),
        migrations.CreateModel(
            name='PathChapter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('estimated_minutes', models.PositiveIntegerField(default=120)),
                ('is_milestone', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_chapters', to='caracteristics.chapter')),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_chapters', to='learningpath.learningpath')),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='unlocks', to='learningpath.pathchapter')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('learning_path', 'chapter')},
            },
        ),
        migrations.CreateModel(
            name='ChapterQuiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Quiz du chapitre', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('passing_score', models.PositiveIntegerField(default=70, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('time_limit_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('max_attempts', models.PositiveIntegerField(default=3)),
                ('shuffle_questions', models.BooleanField(default=True)),
                ('show_correct_answers', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('path_chapter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='learningpath.pathchapter')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(default='trophy', max_length=50)),
                ('achievement_type', models.CharField(choices=[('chapter_complete', 'Chapter Completion'), ('quiz_perfect', 'Perfect Quiz Score'), ('streak', 'Study Streak'), ('milestone', 'Milestone'), ('speed', 'Speed Achievement'), ('dedication', 'Dedication')], max_length=20)),
                ('points', models.PositiveIntegerField(default=10)),
                ('required_value', models.PositiveIntegerField(default=1)),
                ('related_path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='learningpath.learningpath')),
                ('related_chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='learningpath.pathchapter')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('score', models.PositiveIntegerField(default=0)),
                ('passed', models.BooleanField(default=False)),
                ('time_spent_seconds', models.PositiveIntegerField(default=0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='learningpath.chapterquiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('options', models.JSONField(help_text='List of answer options')),
                ('correct_answer_index', models.PositiveIntegerField()),
                ('explanation', models.TextField(help_text='Explanation shown after answering')),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('points', models.PositiveIntegerField(default=1)),
                ('order', models.PositiveIntegerField(default=0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='learningpath.chapterquiz')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserLearningPathProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('current_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('total_time_seconds', models.PositiveIntegerField(default=0)),
                ('experience_points', models.PositiveIntegerField(default=0)),
                ('level', models.PositiveIntegerField(default=1)),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='learningpath.learningpath')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_path_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'learning_path')},
            },
        ),
        migrations.CreateModel(
            name='UserChapterProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('quiz_score', models.PositiveIntegerField(blank=True, null=True)),
                ('quiz_attempts', models.PositiveIntegerField(default=0)),
                ('path_chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='learningpath.pathchapter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter_progress', to=settings.AUTH_USER_MODEL)),
                ('path_progress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter_progress', to='learningpath.userlearningpathprogress')),
            ],
            options={
                'unique_together': {('user', 'path_chapter')},
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(help_text='Video URL (YouTube, Vimeo, or direct link)')),
                ('thumbnail_url', models.URLField(blank=True)),
                ('video_type', models.CharField(choices=[('lesson', 'Lesson'), ('summary', 'Summary'), ('exercise', 'Exercise Walkthrough'), ('bonus', 'Bonus Content')], default='lesson', max_length=20)),
                ('duration_seconds', models.PositiveIntegerField(help_text='Duration in seconds')),
                ('order', models.PositiveIntegerField(default=0)),
                ('transcript', models.TextField(blank=True, help_text='Video transcript for accessibility')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('path_chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='learningpath.pathchapter')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='VideoResource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('resource_type', models.CharField(choices=[('pdf', 'PDF Document'), ('link', 'External Link'), ('exercise', 'Practice Exercise'), ('code', 'Code Sample')], max_length=20)),
                ('url', models.URLField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='learningpath.video')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='LearningStreak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('minutes_studied', models.PositiveIntegerField(default=0)),
                ('videos_watched', models.PositiveIntegerField(default=0)),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learningpath.learningpath')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_streaks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date', 'learning_path')},
            },
        ),
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_answer_index', models.PositiveIntegerField()),
                ('is_correct', models.BooleanField()),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='learningpath.quizattempt')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='learningpath.quizquestion')),
            ],
            options={
                'unique_together': {('attempt', 'question')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achievements', to='learningpath.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_achievements', to=settings.AUTH_USER_MODEL)),
                ('path_progress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='learningpath.userlearningpathprogress')),
            ],
            options={
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='UserVideoProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watched_seconds', models.PositiveIntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('chapter_progress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_progress', to='learningpath.userchapterprogress')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_progress', to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='learningpath.video')),
            ],
            options={
                'unique_together': {('user', 'video')},
            },
        ),
    ]
